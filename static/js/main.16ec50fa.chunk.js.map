{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Modal.js","components/CommentForm.js","components/Comment.js","components/Mess.js","components/MessForm.js","routes/Home.js","components/Navigation.js","routes/Profile.js","routes/UesrProfile.js","components/Modal2.js","routes/Alert.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","displayName","name","email","password","instagramId","photoURL","uid","authObj","setAuthObj","newAccount","setNewAccount","dpNameCheck","setDpNameCheck","checkError","setCheckError","error","setError","onChange","event","a","target","value","collection","where","get","docs","length","onSubmit","preventDefault","Error","createUserWithEmailAndPassword","add","signInWithEmailAndPassword","message","className","type","placeholder","required","id","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","then","result","User","user","updateProfile","src","width","icon","faGoogle","faGithub","Modal","props","setWrapperRef","bind","handleClickOutside","state","isOpenMoal","document","addEventListener","this","removeEventListener","node","wrapperRef","contains","setState","ref","setIsOpenModal","children","Component","CommentForm","commentObj","ProfileObj","messObj","isOwner","history","useHistory","onProfileClick","currentUser","push","creator","userProfile","profileArr","map","doc","data","pathname","onDelClick","window","confirm","delete","createAtDetail","split","index","faTrashAlt","text","Comment","comment","setComment","dbComments","setDbComments","isComments","setIsComments","useEffect","orderBy","onSnapshot","snapshot","commentArr","Id","createAt","Date","now","creatorId","exists","update","Alert","alertObj","fromName","toName","creatorName","messId","set","rel","href","faComment","Mess","editing","setEditing","newMess","setNewMess","attachment","setAttachment","mention","setMention","mentionObj","setMentionObj","isHeart","setIsHeart","heart","setHeart","isOpenModal","heart_ID","includes","filter","alert","forEach","console","log","attachmentURL","refFromURL","onDelPhotoClick","toggleEditing","attachmentRef","child","uuidv4","putString","response","getDownloadURL","onClearAttachment","onHeartClick","it","onMentionClick","creatorPhoto","faEllipsisV","faAt","for","faPlus","search","ment","toString","substring","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","style","display","line","faHeart","color","MessForm","mess","setmess","creatorEmail","messID","userDoc","Home","messages","setmessages","messArr","reverse","Navigation","location","useLocation","setAlert","bool","to","faCircle","faBell","faArrowLeft","refreshUser","JSON","parse","localStorage","getItem","Profile","setProfile","ProfileOrigin","instaLink","getMyMesses","mymessArr","docId","faInstagram","signOut","setinstaLink","performance","navigation","getProfile","getMesses","messes","messesArr","Modal2","setMessObj","AppRouter","isLoggedin","exact","path","UesrProfile","App","init","setinit","userObj","setUserObj","setProfileObj","onAuthStateChanged","getMyProfile","args","setItem","stringify","content","Boolean","getFullYear","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.16ec50fa.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL : process.env.REACT_APP_DATABASE_URL,\r\n    projectId:  process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_MESSAGIN_ID,\r\n    appId:  process.env.REACT_APP_APP_ID,\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance =firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService, dbService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n    const [authObj, setAuthObj] = useState({\r\n        displayName: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        instagramId: \"\",\r\n        photoURL: \"\",\r\n        uid: \"\"\r\n    });\r\n    const [newAccount, setNewAccount] = useState(\"\");\r\n    const [dpNameCheck, setDpNameCheck] = useState(false);\r\n    const [checkError, setCheckError] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n\r\n    const onChange = async (event) => {\r\n        const { target: { name, value } } = event;\r\n        setAuthObj(authObj => ({ ...authObj, [name]: value }))\r\n\r\n        if (name == \"displayName\") {\r\n            const IDcheck = await dbService\r\n                .collection(\"User_Profile\")\r\n                .where(\"displayName\", \"==\", value)\r\n                .get();\r\n            if (IDcheck.docs.length == 0 && value.length > 0) {\r\n                setCheckError(\"사용가능\");\r\n                setDpNameCheck(true);\r\n            }\r\n            else {\r\n                if (value.length != 0) setCheckError(\"이미 다른 사용자가 사용 중 입니다.\");\r\n                else setCheckError(\"\");\r\n                setDpNameCheck(false);\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                if (!dpNameCheck) throw new Error('Display Name을 확인해주세요.');\r\n                data = await authService.createUserWithEmailAndPassword(authObj.email, authObj.password);\r\n                await dbService.collection(\"User_Profile\").add(authObj);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(authObj.email, authObj.password);\r\n            }\r\n        }\r\n        catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => {\r\n        setNewAccount(prev => !prev)\r\n        setError(\"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form className=\"centerContainer authForm\" onSubmit={onSubmit}>\r\n                {newAccount ? (<>\r\n                    <div><span>Email</span>\r\n                        <input name=\"email\" type=\"text\" placeholder=\"Email Adress\" required value={authObj.email} onChange={onChange} />\r\n                    </div>\r\n                    <div><span>PassWord</span>\r\n                        <input name=\"password\" type=\"password\" placeholder=\"6자리 이상 입력해주세요.\" required value={authObj.password} onChange={onChange} />\r\n                    </div>\r\n                    <div><span>Display Name</span>\r\n                        <input name=\"displayName\" type=\"text\" placeholder=\"Display Name\" required value={authObj.displayName} onChange={onChange} />\r\n                    </div>\r\n                    <span id=\"checkMess\">{checkError}</span>\r\n                    <div><span>Name</span>\r\n                        <input name=\"name\" type=\"text\" placeholder=\"Name\" required value={authObj.name} onChange={onChange} />\r\n                    </div>\r\n                    <div><span>Instagram's ID</span>\r\n                        <input name=\"instagramId\" type=\"text\" placeholder=\"선택 사항\" value={authObj.instagramId} onChange={onChange} />\r\n                    </div>\r\n                </>) :\r\n                    (<>\r\n                        <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={authObj.email} onChange={onChange} />\r\n                        <input name=\"password\" type=\"password\" placeholder=\"PassWord\" required value={authObj.password} onChange={onChange} />\r\n                    </>)\r\n                }\r\n                <input type=\"submit\" id=\"submitBtn\" value={newAccount ? \"회원가입\" : \"로그인\"} />\r\n\r\n                <span id=\"error\">{error}</span>\r\n            </form>\r\n            <button id=\"switchBtn\" onClick={toggleAccount}>{newAccount ? \"로그인\" : \"회원가입\"}</button>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, dbService, firebaseInstance } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const { target: { name }, } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }\r\n        else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider)\r\n            .then(async (result) => {\r\n                const User = result.user;\r\n\r\n                const IDcheck = await dbService\r\n                    .collection(\"User_Profile\")\r\n                    .where(\"displayName\", \"==\", User.displayName)\r\n                    .get();\r\n                if (IDcheck.docs.length != 0) {\r\n                    User.updateProfile({\r\n                        displayName: User.email,\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"Container\">\r\n            <img id=\"logo\" src=\"logo.png\" width=\"150px\" />\r\n            <AuthForm />\r\n            <hr />\r\n            <span>소셜 계정으로 로그인</span>\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" ><FontAwesomeIcon icon={faGoogle} /> </button>\r\n                <button onClick={onSocialClick} name=\"github\"><FontAwesomeIcon icon={faGithub} /></button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default Auth;","import React, { Component } from 'react';\r\nexport default class Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    this.state = {\r\n      isOpenMoal: false,\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  /**\r\n   * Set the wrapper ref\r\n   */\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  /**\r\n   * Alert if clicked on outside of element\r\n   */\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.setState({\r\n        isOpenMoal: false\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        isOpenMoal: true,\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return <div ref={this.setWrapperRef} value={this.props.setIsOpenModal(this.state.isOpenMoal)} className=\"modal\">\r\n      {this.props.children}\r\n\r\n    </div>;\r\n  }\r\n}","import { authService, dbService } from 'fbase';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nconst CommentForm = ({ commentObj, ProfileObj, messObj, isOwner }) => {\r\n\r\n    const history = useHistory();\r\n    const onProfileClick = async () => {\r\n        const user = authService.currentUser;\r\n        if (user.displayName == ProfileObj.displayName) history.push(\"/profile\");\r\n        else {\r\n            const userProfile = await dbService\r\n                .collection(\"User_Profile\")\r\n                .where(\"email\", \"==\", commentObj.creator.email)\r\n                .get();\r\n            const profileArr = userProfile.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            history.push({\r\n                pathname: \"/userProfile\",\r\n                state: { ProfileObj: profileArr[0] }\r\n            });\r\n        }\r\n    }\r\n    const onDelClick = async () => {\r\n        const ok = window.confirm(\"댓글을 삭제하시겠습니까?\");\r\n        if (ok) {\r\n            await dbService.doc(`${messObj.id}/${commentObj.id}`).delete();\r\n        }\r\n    }\r\n    return (<>\r\n        <div className=\"commentContainer\">\r\n            <div className=\" messProfile comnentProfile\">\r\n                <div className=\"profilePhoto\" onClick={onProfileClick}>\r\n                    <img src={ProfileObj.photoURL ? ProfileObj.photoURL : \"user.png\"} />\r\n                </div>\r\n                <span>{ProfileObj.displayName}</span>\r\n            </div>\r\n            <div className=\"moreDiv\">\r\n                <span id=\"time\">{commentObj.createAtDetail.split(\" \").map(function (value, index) {\r\n                    if (index == 1 || index == 2) return value + \" \";\r\n                })}\r\n                </span>\r\n                {isOwner&&<span onClick={onDelClick} ><FontAwesomeIcon id=\"icon\" icon={faTrashAlt} /></span>}\r\n            </div>\r\n            \r\n            <div id=\"text\">{commentObj.text}</div>\r\n        </div>\r\n\r\n    </>);\r\n}\r\nexport default CommentForm;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nconst Comment = ({ messObj , ProfileObj}) => {\r\n\r\n    const [comment, setComment] = useState(\"\");\r\n    const [dbComments, setDbComments] = useState([]);\r\n    const [isComments, setIsComments] = useState(false);\r\n    useEffect(() => {\r\n        dbService.collection(`${messObj.id}`).orderBy(\"createAt\").onSnapshot((snapshot) => {\r\n            const commentArr = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n            setDbComments(commentArr);\r\n        });\r\n    }, [])\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.collection(`${messObj.id}`).add({\r\n            text: comment,\r\n            creator: {\r\n                Id: ProfileObj.uid,\r\n                displayName: ProfileObj.displayName,\r\n                photoURL: ProfileObj.photoURL,\r\n                email: ProfileObj.email,\r\n            },\r\n            createAt: Date.now(),\r\n            createAtDetail: Date(),\r\n        });\r\n\r\n        if(ProfileObj.uid!=messObj.creatorId){        \r\n            await dbService.collection(\"User_Alert\").doc(`${messObj.creatorId}`).get().then((doc)=>{\r\n            if(doc.exists){\r\n                dbService.collection(\"User_Alert\").doc(`${messObj.creatorId}`).update({\r\n                    \r\n                        Alert: true,\r\n                        alertObj : [...doc.data().alertObj, {\r\n                            text: `${ProfileObj.displayName}님이 댓글을 달았습니다.`,\r\n                            fromName: ProfileObj.displayName,\r\n                            toName: messObj.creatorName,\r\n                            type: \"comment\",\r\n                            messId: messObj.id\r\n                        } ],\r\n                        \r\n                \r\n                })\r\n            }\r\n            else{\r\n                dbService.collection(\"User_Alert\").doc(`${messObj.creatorId}`).set({\r\n                    Alert: true,\r\n                    alertObj : [{\r\n                        text:`${ProfileObj.displayName}님이 댓글을 달았습니다.`,\r\n                        fromName: ProfileObj.displayName,\r\n                        toName: messObj.creatorName,\r\n                        type: \"comment\",\r\n                        messId: messObj.id\r\n                    } ],\r\n            \r\n            })\r\n            }\r\n        })}\r\n        setComment(\"\");\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setComment(value);\r\n    };\r\n\r\n    return (<>\r\n        <head><link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\" /></head>\r\n        <Modal setIsOpenModal={setIsComments}>\r\n            <FontAwesomeIcon id=\"icon\" icon={faComment} id=\"commentIcon\" />\r\n            {isComments && <><div className=\"commentFac\">\r\n                {dbComments.map((comment) => <CommentForm commentObj={comment} ProfileObj={comment.creator} messObj={messObj} isOwner={comment.creator.Id==ProfileObj.uid}/>)}\r\n                <form onSubmit={onSubmit} className=\"commentFacForm\">\r\n                    <TextareaAutosize id=\"TextArea\" onChange={onChange} value={comment} type=\"text\" required />\r\n                    <input id=\"commentSubmit\" type=\"submit\" value=\"&#xf054;\" />\r\n                </form>\r\n            </div>\r\n            </>}\r\n        </Modal>\r\n\r\n    </>\r\n    );\r\n}\r\nexport default Comment;\r\n","import { authService, dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAt, faPlus, faHeart, faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst Mess = ({ messObj, isOwner, ProfileObj }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newMess, setNewMess] = useState(messObj.text);\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [mention, setMention] = useState(messObj.toName);\r\n    const [mentionObj, setMentionObj] = useState({\r\n        text: \"\",//textfield's text\r\n        fromName: null,\r\n        toName: null,\r\n        type: \"mention\",\r\n        messId: messObj.id,\r\n    });\r\n\r\n    const [isHeart, setIsHeart] = useState(false);\r\n    const [heart, setHeart] = useState(0);\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        dbService.doc(`Mess_More/${messObj.id}`).onSnapshot(async (doc) => {\r\n            if (doc.exists) {\r\n                setHeart(doc.data().heart);\r\n                if (doc.data().heart_ID.includes(ProfileObj.uid)) setIsHeart(true);\r\n                else setIsHeart(false);\r\n\r\n            } else {\r\n                setHeart(0);\r\n            }\r\n        });\r\n    }, [])\r\n    const onDelClick = async () => {\r\n        const ok = window.confirm(\"내용을 정말 삭제하시겠습니까?\");\r\n        if (ok) {\r\n            await dbService.collection(\"User_Alert\").get().then((get) => {\r\n                get.docs.map((doc) => {\r\n                    dbService.collection(\"User_Alert\").doc(doc.id).update({\r\n                        alertObj: doc.data().alertObj.filter((alert) => alert.messId != messObj.id)\r\n                    })\r\n                })\r\n            })\r\n            dbService.collection(`${messObj.id}`).onSnapshot((snapshot) => {\r\n                snapshot.docs.forEach((doc) => {\r\n                    console.log(doc)\r\n                    dbService.collection(`${messObj.id}`).doc(doc.id).delete()\r\n                })\r\n            })\r\n            if(messObj.attachmentURL)await storageService.refFromURL(messObj.attachmentURL).delete();\r\n            await dbService.doc(`Messages/${messObj.id}`).delete();\r\n            await dbService.doc(`Mess_More/${messObj.id}`).delete();\r\n\r\n        }\r\n    }\r\n    const onDelPhotoClick = async () => {\r\n        const ok = window.confirm(\"사진을 정말 삭제하시겠습니까?\");\r\n        if (ok) {\r\n            await storageService.refFromURL(messObj.attachmentURL).delete();\r\n            let attachmentURL = \"\";\r\n            await dbService.doc(`Messages/${messObj.id}`).update({\r\n                attachmentURL,\r\n            });\r\n        }\r\n    }\r\n    const onProfileClick = async () => {\r\n        const user = authService.currentUser;\r\n        if (user.uid == messObj.creatorId) history.push(\"/profile\");\r\n        else {\r\n            const userProfile = await dbService\r\n                .collection(\"User_Profile\")\r\n                .where(\"uid\", \"==\", messObj.creatorId)\r\n                .get();\r\n            const profileArr = userProfile.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            history.push({\r\n                pathname: \"/userProfile\",\r\n                state: { ProfileObj: profileArr[0] }\r\n            });\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev)\r\n        setNewMess(messObj.text);\r\n        setMention(messObj.toName);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentURL = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${messObj.creatorId}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentURL = await response.ref.getDownloadURL();\r\n        }\r\n        else {\r\n            attachmentURL = messObj.attachmentURL;\r\n        }\r\n\r\n        if (mention != ProfileObj.displayName) {\r\n            if (mention && messObj.toName != mention) {\r\n                await dbService.collection(\"User_Profile\").where(\"displayName\", \"==\", mention).get().then((doc) => {\r\n                    doc.docs.map(async (get) => {\r\n                        await dbService.collection(\"User_Alert\").doc(`${get.data().uid}`).get().then((doc) => {\r\n                            if (doc.exists) {\r\n                                dbService.collection(\"User_Alert\").doc(`${get.data().uid}`).update({\r\n                                    Alert: true,\r\n                                    alertObj: doc.data().alertObj.map((alert) => { if ((alert.messId == messObj.id) && (alert.type == \"mention\")) alert = mentionObj })\r\n                                })\r\n                            }\r\n                            else {\r\n                                dbService.collection(\"User_Alert\").doc(`${get.data().uid}`).set({\r\n                                    Alert: true,\r\n                                    alertObj: [mentionObj]\r\n                                })\r\n                            }\r\n\r\n                        })\r\n                    })\r\n                })\r\n\r\n            }\r\n            else if (!mention) {\r\n                await dbService.collection(\"User_Profile\").where(\"displayName\", \"==\", mention).get().then((doc) => {\r\n                    doc.docs.map(async (doc) => {\r\n                        await dbService.collection(\"User_Alert\").doc(`${doc.data().uid}`).get().then((doc) => {\r\n                            if (doc.exists) {\r\n                                dbService.collection(\"User_Alert\").doc(`${doc.data().uid}`).update({\r\n                                    alertObj: doc.data().alertObj.filter((alert) => (alert.messId != messObj.id) || (alert.type != \"mention\"))\r\n                                })\r\n                            }\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        await dbService.doc(`Messages/${messObj.id}`).update({\r\n            text: newMess,\r\n            toName: mention,\r\n            attachmentURL,\r\n        });\r\n\r\n        setEditing(false);\r\n        onClearAttachment();\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNewMess(value);\r\n        if (value.search(\"@\") != -1) {\r\n            const ment = value.split(\" \").filter(it => it.includes(\"@\")).toString();\r\n            setMention(ment.substring(ment.search(\"@\") + 1, ment.length));\r\n            setMentionObj({\r\n                text: `${ProfileObj.displayName}님이 언급하셨습니다.`,\r\n                fromName: ProfileObj.displayName,\r\n                toName: ment.substring(ment.search(\"@\") + 1, ment.length),\r\n                type: \"mention\",\r\n                messId: messObj.id,\r\n            })\r\n        }\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: { files } } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result } } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\")\r\n    const onHeartClick = async () => {\r\n        if (isHeart) {\r\n            await dbService.doc(`Mess_More/${messObj.id}`).get().then(async (doc) => {\r\n                await dbService.doc(`Mess_More/${messObj.id}`).update({\r\n                    heart: doc.data().heart - 1,\r\n                    heart_ID: doc.data().heart_ID.filter(it => it != ProfileObj.uid)\r\n                })\r\n            });\r\n        }\r\n        else {\r\n            await dbService.doc(`Mess_More/${messObj.id}`).get().then(async (doc) => {\r\n                if (doc.exists) {\r\n                    await dbService.collection(\"Mess_More\").doc(`${messObj.id}`).set({\r\n                        heart: doc.data().heart + 1,\r\n                        heart_ID: [...doc.data().heart_ID, ProfileObj.uid]\r\n                    })\r\n                } else {\r\n                    await dbService.collection(\"Mess_More\").doc(`${messObj.id}`).set({\r\n                        heart: 1,\r\n                        heart_ID: [ProfileObj.uid]\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const onMentionClick = () => {\r\n        setNewMess(newMess + \"@\");\r\n    }\r\n    return (<>\r\n        <head><link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\" /></head>\r\n        <div className=\"messContainer\">\r\n            <div className=\"messProfile\">\r\n                <div className=\"profilePhoto\" onClick={onProfileClick}>\r\n                    <img src={messObj.creatorPhoto ? messObj.creatorPhoto : \"user.png\"} />\r\n                </div>\r\n                <span>{messObj.creatorName}</span>\r\n            </div>\r\n\r\n            <div className=\"moreDiv\">\r\n                <span id=\"time\">{messObj.createAtDetail.split(\" \").map(function (value, index) {\r\n                    if (index == 1 || index == 2 || index == 4) return value + \" \";\r\n                })}\r\n                </span>\r\n                {isOwner && !editing && (\r\n                    <>\r\n                        <Modal setIsOpenModal={setIsOpenModal}>\r\n                            {!isOpenModal ? <FontAwesomeIcon id=\"modalLabel\" icon={faEllipsisV} /> :\r\n\r\n                                <div className=\"modalChildren\">\r\n                                    <button onClick={toggleEditing}>수정</button>\r\n                                    <button id=\"delBtn\" onClick={onDelClick}>삭제</button>\r\n                                </div>\r\n                            }\r\n                        </Modal>\r\n                    </>)}\r\n            </div>\r\n\r\n            {editing ?\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"editForm\">\r\n\r\n                        {mention && <div className=\"mention\"><span>To : <FontAwesomeIcon icon={faAt} id=\"at\" /> {mention}</span></div>}\r\n\r\n                        {!messObj.attachmentURL && <div className=\"noneAttachClass\">\r\n                            <span onClick={onMentionClick} id=\"addMention\"><FontAwesomeIcon icon={faAt} id=\"at\" /></span>\r\n                            <label for=\"attach-file2\" className=\"file_label file_label3\"><FontAwesomeIcon icon={faPlus} /></label></div>}\r\n\r\n                        <TextareaAutosize id=\"TextArea\" onChange={onChange} value={newMess} type=\"text\" required />\r\n                        <input id=\"attach-file2\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{ display: 'none' }} />\r\n                        {messObj.attachmentURL && <div className=\"attachClass\">\r\n                            <span onClick={onMentionClick} id=\"addMention\"><FontAwesomeIcon icon={faAt} id=\"at\" /></span>\r\n                            <span id=\"attachmentDel\" onClick={onDelPhotoClick}>사진 삭제</span>\r\n                            <img src={messObj.attachmentURL} width=\"100%\" />\r\n                        </div>}\r\n                        {attachment && <div>\r\n                            <span id=\"attachmentDel\" onClick={onClearAttachment}>사진 취소</span>\r\n                            <img src={attachment} width=\"100%\" />\r\n                        </div>}\r\n                        <div className=\"btns\">\r\n                            <button id=\"delBtn\" onClick={onDelClick}>삭제</button>\r\n                            <button onClick={toggleEditing}>취소</button>\r\n                            <input type=\"submit\" value=\"완료\"></input>\r\n                        </div>\r\n                    </form>\r\n\r\n                </>\r\n                :\r\n                <>\r\n                    {mention && <div className=\"mention\"><span>To : <FontAwesomeIcon icon={faAt} id=\"at\" /> {mention}</span></div>}\r\n                    <div className=\"messContent\">{messObj.text.split(\"\\n\").map((line) => {\r\n                        return (<h4>{line.split(`@${mention}`)}<br /></h4>);\r\n                    })}\r\n                    </div>\r\n                    {messObj.attachmentURL && <img src={messObj.attachmentURL} className=\"attachment2\" />}\r\n                    <div className=\"heart\">\r\n                        {isHeart ? <FontAwesomeIcon id=\"icon\" icon={faHeart} color=\"#a84848\" onClick={onHeartClick} /> : <FontAwesomeIcon id=\"icon\" icon={faHeart} onClick={onHeartClick} />}\r\n                        <span>{heart}</span>\r\n                    </div>\r\n                    <Comment messObj={messObj} ProfileObj={ProfileObj} />\r\n                </>\r\n            }\r\n        </div></>\r\n    );\r\n}\r\nexport default Mess;\r\n","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faAt } from \"@fortawesome/free-solid-svg-icons\";\r\nconst MessForm = ({ ProfileObj }) => {\r\n    const [mess, setmess] = useState(\"\");//textfield's text\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [mention, setMention] = useState(\"\");\r\n    const [mentionObj, setMentionObj] = useState({\r\n        text: \"\",//textfield's text\r\n        fromName: null,\r\n        toName: null,\r\n        type: \"mention\",\r\n        messId: \"\"\r\n    });\r\n\r\n    const onSubmit = async (event) => {\r\n        if (mess === \"\") return;\r\n\r\n        event.preventDefault();\r\n        let attachmentURL = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${ProfileObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentURL = await response.ref.getDownloadURL();\r\n        }\r\n        const messObj = {\r\n            text: mess,//textfield's text\r\n            createAt: Date.now(),\r\n            createAtDetail: Date(),\r\n            creatorId: ProfileObj.uid,\r\n            creatorEmail: ProfileObj.email,\r\n            creatorName: ProfileObj.displayName,\r\n            creatorPhoto: ProfileObj.photoURL,\r\n            toName: mentionObj.toName,\r\n            attachmentURL,\r\n        }\r\n        await dbService.collection(\"Messages\").add(messObj).then(async (doc) => {\r\n            const messID = doc.id\r\n            if (mention && mention != ProfileObj.displayName) {\r\n                await dbService.collection(\"User_Profile\").where(\"displayName\", \"==\", mention).get().then((get) => {\r\n                    get.docs.map(async (userDoc) => {\r\n                        await dbService.collection(\"User_Alert\").doc(`${userDoc.data().uid}`).get().then((doc) => {\r\n                            if (doc.exists) {\r\n                                dbService.collection(\"User_Alert\").doc(`${userDoc.data().uid}`).update({\r\n                                    Alert: true,\r\n                                    alertObj: [...doc.data().alertObj, { ...mentionObj, messId: messID }],\r\n                                })\r\n                            }\r\n                            else {\r\n                                dbService.collection(\"User_Alert\").doc(`${userDoc.data().uid}`).set({\r\n                                    Alert: true,\r\n                                    alertObj: [{ ...mentionObj, messId: messID }],\r\n                                });\r\n                            }\r\n                        })\r\n                    })\r\n                })\r\n\r\n            }\r\n        });\r\n        setmess(\"\");\r\n        setAttachment(\"\");\r\n        setMention(\"\");\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setmess(value);\r\n\r\n        if (value.search(\"@\") != -1) {\r\n            const ment = value.split(\" \").filter(it => it.includes(\"@\")).toString();\r\n            setMention(ment.substring(ment.search(\"@\") + 1, ment.length));\r\n            setMentionObj({\r\n                text: `${ProfileObj.displayName}님이 언급하셨습니다.`,\r\n                fromName: ProfileObj.displayName,\r\n                toName: ment.substring(ment.search(\"@\") + 1, ment.length),\r\n                type: \"mention\",\r\n\r\n            })\r\n        }\r\n    }\r\n    const onFileChange = (event) => {\r\n        const { target: { files } } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result } } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\")\r\n    const onMentionClick = () => {\r\n        setmess(mess + \"@\");\r\n    }\r\n\r\n    return (<>\r\n        <head><link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\" /></head>\r\n        <form onSubmit={onSubmit} className=\"messForm\">\r\n            <div>\r\n                {mention && <div className=\"mention\"><span>To : <FontAwesomeIcon icon={faAt} id=\"at\" /> {mention}</span></div>}\r\n                <span onClick={onMentionClick} id=\"addMention\"><FontAwesomeIcon icon={faAt} id=\"at\" /></span>\r\n                <label for=\"attach-file\" className=\"file_label\">\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                </label>\r\n                <TextareaAutosize id=\"TextArea\" value={mess} onChange={onChange} type=\"text\" placeholder=\"What are you doing?\" />\r\n                <input id=\"messSubmit\" type=\"submit\" value=\"&#xf054;\" />\r\n            </div>\r\n            <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{ display: 'none' }} />\r\n            {attachment && <div className=\"attachment\">\r\n                <span id=\"attachmentDel\" onClick={onClearAttachment}>사진 취소</span>\r\n                <img src={attachment} width=\"100%\" />\r\n            </div>}\r\n        </form>\r\n    </>\r\n    );\r\n}\r\nexport default MessForm;","import Mess from \"components/Mess\";\r\nimport MessForm from \"components/MessForm\";\r\nimport { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ ProfileObj }) => {\r\n\r\n    const [messages, setmessages] = useState([]);//to show all messages in db\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"Messages\").orderBy(\"createAt\").onSnapshot((snapshot) => {\r\n            const messArr = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            })); //get messages from db\r\n            setmessages(messArr);//set messages to show all messages in db\r\n        })\r\n    }, []);\r\n    return (\r\n        <div className=\"Container\">\r\n            <img id=\"logo\" name=\"home\" src=\"logo.png\" width=\"150px\" />\r\n            <MessForm ProfileObj={ProfileObj} />\r\n            <div className=\"messCotainer1\">\r\n                {messages.map((mess) => (\r\n                    <Mess key={mess.id} messObj={mess} ProfileObj={ProfileObj} isOwner={mess.creatorId == ProfileObj.uid} />\r\n                )).reverse()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import { Link } from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faBell, faCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nconst Navigation = ({ ProfileObj }) => {\r\n    const location = useLocation();\r\n    const [alert, setAlert] = useState(false);//to show all messages in db\r\n\r\n    dbService.collection(\"User_Alert\").doc(`${ProfileObj.uid}`).onSnapshot((snapshot) => {\r\n        if (snapshot.exists) {\r\n            const bool=snapshot.data().Alert;\r\n            setAlert(bool);\r\n        }\r\n    })\r\n    return (<>\r\n        {location.pathname == \"/\" ?\r\n            <nav>\r\n                <Link to=\"/alert\" id=\"bell\">{alert && <FontAwesomeIcon icon={faCircle} id=\"alertDot\" />}<FontAwesomeIcon icon={faBell} /> </Link>\r\n                <div className=\"profilePhoto\">\r\n                    <Link to=\"/profile\"><img src={ProfileObj.photoURL ? ProfileObj.photoURL : \"user.png\"} /></Link>\r\n                </div>\r\n            </nav>\r\n            :\r\n            <nav>\r\n                <Link to=\"/\" id=\"back\"><FontAwesomeIcon icon={faArrowLeft} /> </Link>\r\n                <span id=\"name\">{location.pathname == \"/alert\" ? \"알림\" : ProfileObj.displayName}</span>\r\n            </nav>\r\n        }\r\n    </>\r\n    );\r\n\r\n};\r\nexport default Navigation;","import Mess from \"components/Mess\";\r\nimport { authService, dbService, storageService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faInstagram } from \"@fortawesome/free-brands-svg-icons\";;\r\n\r\nexport default ({ refreshUser }) => {\r\n    const [Profile, setProfile] = useState(() => JSON.parse(window.localStorage.getItem(\"ProfileObj\")) || 0);  \r\n    const ProfileOrigin= JSON.parse(window.localStorage.getItem(\"ProfileObj\")) || 0;\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [messages, setmessages] = useState([]);\r\n    const [editing, setEditing] = useState(false);\r\n    const [checkError, setCheckError] = useState(\"\");\r\n    const [dpNameCheck, setDpNameCheck] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const instaLink = `https://www.instagram.com/${ProfileOrigin.instagramId}`;\r\n\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getMyMesses();\r\n    }, []);\r\n\r\n    const getMyMesses = () => {\r\n        dbService\r\n            .collection(\"Messages\")\r\n            .where(\"creatorId\", \"==\", Profile.uid)\r\n            .orderBy(\"createAt\")\r\n            .onSnapshot((snapshot) => {\r\n                const mymessArr = snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                })); //get messages from db\r\n                setmessages(mymessArr);\r\n            })\r\n    }\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n    const onEditClick = () => {\r\n        setEditing(true);\r\n    }\r\n    const onCancleClick = () => {\r\n        setEditing(false);\r\n    }\r\n\r\n    const onChange = async (event) => {\r\n        const { target: { name, value } } = event;\r\n\r\n        setProfile(Profile => ({ ...Profile, [name]: value }));\r\n\r\n        if (name == \"displayName\") {\r\n            const IDcheck = await dbService\r\n                .collection(\"User_Profile\")\r\n                .where(\"displayName\", \"==\", value)\r\n                .get();\r\n            if ((IDcheck.docs.length == 0 && Profile.displayName.length > 0) || value == ProfileOrigin.displayName) {\r\n                setCheckError(\"사용가능\");\r\n                setDpNameCheck(true);\r\n            }\r\n            else {\r\n                if (value.length != 0) setCheckError(\"이미 다른 사용자가 사용 중 입니다.\");\r\n                else setCheckError(\"\");\r\n                setDpNameCheck(false);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentURL = \"\";\r\n        const user = authService.currentUser;\r\n        setError(\"\");\r\n        try {\r\n            if (!dpNameCheck) throw new Error('Display Name을 확인해주세요.');\r\n            if (attachment !== \"\") {\r\n                const attachmentRef = storageService.ref().child(`${Profile.uid}/${uuidv4()}`);\r\n                const response = await attachmentRef.putString(attachment, \"data_url\");\r\n                attachmentURL = await response.ref.getDownloadURL();\r\n            }\r\n            else attachmentURL = Profile.photoURL;\r\n            await dbService.doc(`User_Profile/${Profile.docId}`).update({\r\n                displayName: Profile.displayName,\r\n                name: Profile.name,\r\n                instagramId: Profile.instagramId,\r\n                photoURL: attachmentURL,\r\n            });\r\n            await user.updateProfile({\r\n                displayName: Profile.displayName,\r\n                photoURL: attachmentURL,\r\n            });\r\n            setEditing(false);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n        refreshUser();\r\n    }\r\n    const onFileChange = (event) => {\r\n        const { target: { files } } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result } } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"Container\">\r\n                {editing ?\r\n                    <form className=\"editProfileForm\" onSubmit={onSubmit}>\r\n                        <div className=\"centerContainer photoChange\">\r\n                            <div className=\"profilePhoto\">\r\n                                <img src={attachment ? attachment : (ProfileOrigin.photoURL ? ProfileOrigin.photoURL : \"user.png\")} />\r\n                            </div>\r\n                            <label for=\"changefile\" className=\"file_label2\">프로필 사진 바꾸기</label>\r\n                            <input id=\"changefile\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{ display: 'none' }} />\r\n                        </div>\r\n                        <div className=\"centerContainer editWrapper\">\r\n                            <div className=\"editBox\">\r\n                                <span>사용자 이름</span>\r\n                                <input name=\"displayName\" type=\"text\" placeholder={ProfileOrigin.displayName} onChange={onChange} />\r\n                            </div>\r\n                            <span id=\"checkMess\">{checkError}</span>\r\n\r\n                            <div className=\"editBox\">\r\n                                <span>이름</span>\r\n                                <input name=\"name\" type=\"text\" placeholder={ProfileOrigin.name} onChange={onChange} />\r\n                            </div>\r\n                            <div className=\"editBox\">\r\n                                <span>Instagram 아이디</span>\r\n                                <input name=\"instagramId\" type=\"text\" placeholder={ProfileOrigin.instagramId} onChange={onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <span id=\"error\">{error}</span>\r\n                        <div className=\"centerContainer btns\">\r\n                            <button onClick={onCancleClick}>취소</button>\r\n                            <input type=\"submit\" value=\"완료\" />\r\n                        </div>\r\n\r\n                    </form>\r\n                    :\r\n                    <>\r\n                        <div className=\"showProfile\">\r\n                            <div className=\"profilePhoto\">\r\n                                <img src={ProfileOrigin.photoURL ? ProfileOrigin.photoURL : \"user.png\"} />\r\n                            </div>\r\n                            <ul>\r\n                                <li>{ProfileOrigin.name}</li>\r\n                                <li id=\"instagramId\"><p>Instagram <FontAwesomeIcon icon={faInstagram} /></p> <a href={instaLink} target=\"_blank\" >{ProfileOrigin.instagramId}</a></li>\r\n                            </ul>\r\n                            <button onClick={onEditClick}>프로필 수정</button>\r\n                        </div>\r\n\r\n                        <button id=\"logoutBtn\" onClick={onLogOutClick}>로그아웃</button>\r\n                        <span>{ProfileOrigin.displayName}의 작성글</span>\r\n                        <div>\r\n                            {messages.map((mess) => (\r\n                                <Mess key={mess.id} messObj={mess} ProfileObj={ProfileOrigin} isOwner={mess.creatorId == ProfileOrigin.uid} />\r\n                            )).reverse()}\r\n                        </div>\r\n\r\n                    </>}\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};","import Mess from \"components/Mess\";\r\nimport { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faInstagram } from \"@fortawesome/free-brands-svg-icons\";;\r\n\r\nexport default ({ProfileObj }) => {\r\n    const [Profile, setProfile] = useState([]);\r\n    const [messages, setmessages] = useState([]);\r\n    const [instaLink, setinstaLink] = useState(\"\");\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(window.performance.navigation.type==1){\r\n            history.push(\"/\")\r\n        }\r\n        else{\r\n            const getProfile = location.state.ProfileObj;\r\n            setProfile(getProfile);\r\n            setinstaLink(`https://www.instagram.com/${getProfile.instagramId}`)\r\n            getMesses(getProfile);\r\n        }\r\n      \r\n\r\n    }, []);\r\n    const getMesses = async (Profile) => {\r\n        const messes = await dbService\r\n            .collection(\"Messages\")\r\n            .where(\"creatorId\", \"==\", Profile.uid)\r\n            .orderBy(\"createAt\")\r\n            .get();\r\n        const messesArr = messes.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }));\r\n\r\n        setmessages(messesArr);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"Container\">\r\n                <div className=\"showProfile\">\r\n                    <div className=\"profilePhoto\">\r\n                        <img src={Profile.photoURL ? Profile.photoURL : \"user.png\"} />\r\n                    </div>\r\n                    <ul>\r\n                        <li>{Profile.name}</li>\r\n                        <li id=\"instagramId\"><p>Instagram <FontAwesomeIcon icon={faInstagram} /></p> <a href={instaLink} target=\"_blank\" >{Profile.instagramId}</a></li>\r\n                    </ul>\r\n                </div>\r\n                <span>{Profile.displayName}의 작성글</span>\r\n                <div>\r\n                    {messages.map((mess) => (\r\n                        <Mess key={mess.id} messObj={mess} ProfileObj={ProfileObj} isOwner={false} />\r\n                    )).reverse()}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};","import React, { Component } from 'react';\r\nexport default class Modal2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    this.state ={\r\n      isOpenMoal: false,\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  /**\r\n   * Set the wrapper ref\r\n   */\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  /**\r\n   * Alert if clicked on outside of element\r\n   */\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.setState({\r\n        isOpenMoal: false\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        isOpenMoal: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div ref={this.setWrapperRef} className=\"modal2\">\r\n      {!this.state.isOpenMoal && <span id=\"more\">더보기</span>}\r\n      {this.state.isOpenMoal && this.props.children}\r\n    </div>;\r\n  }\r\n}","import Mess from 'components/Mess';\r\nimport Modal2 from 'components/Modal2';\r\nimport { dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nexport default () => {\r\n    const Profile = JSON.parse(window.localStorage.getItem(\"ProfileObj\")) || 0;\r\n    const [messObj, setMessObj] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"User_Alert\").doc(`${Profile.uid}`).get().then(async (doc) => {\r\n            if (doc.exists) {\r\n                dbService.collection(\"User_Alert\").doc(`${Profile.uid}`).update({\r\n                    Alert: false,\r\n                })\r\n                await doc.data().alertObj.map(async (it) => {\r\n                    await dbService.collection(\"Messages\").doc(`${it.messId}`).get().then(\r\n                        (doc) => {\r\n                            const id = doc.id;\r\n                            setMessObj((messObj) => [...messObj, { alertObj: it, messObj: { ...doc.data(), id: id } }])\r\n                        }\r\n                    )\r\n                })\r\n            }\r\n\r\n        });\r\n    }, []);\r\n\r\n    console.log(messObj)\r\n    return (\r\n        <>\r\n            <div className=\"Container\">\r\n                {messObj.map((it) =>\r\n                (<>\r\n                    <div className=\"centerContainer alertForm\">\r\n                        <span id=\"alerts\">{it.alertObj.text}</span>\r\n                        <Modal2>\r\n                            <Mess key={it.messObj.id} messObj={it.messObj} ProfileObj={Profile} isOwner={it.messObj.creatorId == Profile.uid} />\r\n                        </Modal2>\r\n                    </div>\r\n                </>)\r\n                ).reverse()}\r\n            </div>\r\n        </>\r\n    );\r\n}","import REACT from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\nimport UesrProfile from \"routes/UesrProfile\";\r\nimport Alert from \"routes/Alert\";\r\n\r\nconst AppRouter = ({ isLoggedin, refreshUser, ProfileObj }) => {\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedin && <Navigation ProfileObj={ProfileObj} />}\r\n            <Switch>\r\n                {isLoggedin ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home ProfileObj={ProfileObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} ProfileObj={ProfileObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/userProfile\">\r\n                            <UesrProfile ProfileObj={ProfileObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/alert\">\r\n                            <Alert ProfileObj={ProfileObj} />\r\n                        </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\n\nimport { authService, dbService } from \"fbase\";\nimport AppRouter from './Router';\n\nfunction App() {\n  const [init, setinit] = useState(false);\n  const [userObj, setUserObj] = useState(null);//for using anywhere define here\n  const [ProfileObj, setProfileObj] = useState([]);\n\n  useEffect(() => {\n    authService.onAuthStateChanged(async (user) => {\n      if (user) {\n        dbService.collection(\"User_Profile\").where(\"email\", \"==\", user.email).get().then((get) => {\n\n          if (get.docs == \"\") {\n            dbService.collection(\"User_Profile\").add({\n              displayName: user.displayName,\n              name: \"\",\n              email: user.email,\n              password: \"\",\n              instagramId: \"\",\n              photoURL: user.photoURL,\n              uid: user.uid\n            });\n          }\n          else {\n            get.docs.map(async (doc) => {\n              if (doc.exists && doc.data().uid == \"\") {\n                await dbService\n                  .collection(\"User_Profile\")\n                  .doc(`${doc.id}`)\n                  .update({\n                    uid: user.uid\n                  })\n              }\n            })\n          }\n        });\n        getMyProfile(user.uid);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          email: user.email,\n          photoURL: user.photoURL,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }\n      else setUserObj(null);\n\n      setinit(true);\n    })\n\n  }, []);\n  const getMyProfile = async (uid) => {\n    const arr = await dbService\n      .collection(\"User_Profile\")\n      .where(\"uid\", \"==\", uid)\n      .get();\n    arr.docs.map((doc) => {\n      const get = { docId: doc.id, ...doc.data() };\n      setProfileObj(get);\n\n      window.localStorage.setItem(\"ProfileObj\", JSON.stringify(get))\n    });\n\n  }\n\n  const refreshUser = async () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      email: user.email,\n      photoURL: user.photoURL,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n    getMyProfile(user.uid)\n\n  }\n\n  return (\n    <>\n      <head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0 user-scalable=no\" /></head>\n      {init ? <AppRouter isLoggedin={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} ProfileObj={ProfileObj} /> : <span>Loading..</span>}\n      <footer className=\"centerContainer\"><hr />&copy; WAYD {new Date().getFullYear()} by keeper</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport fbase from \"./fbase.js\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}